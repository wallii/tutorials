<?php
function custom_code_form_alter(&$form, &$form_state, $form_id) {
	 
	 if($form_id == 'registration_form_node_form') {
		 
		  $form['#validate'][] = 'starting_drupal_dev_form_validate';
		 
	 }
	if($form_id == 'inventory_node_form') {
		
		
		
		$form['actions']['reset'] = array(
			'#type' => 'submit',
			'#value' => t('Reset'),
			'#weight' => -10,
			'#submit' => array('costom_code_inventory_reset'),
		);

		if(!isset($_GET['destination'])) {
			global $user;
			$curtuid = $user->uid;
			$query11 = db_select('node', 'ns');
			$query11->fields('ns', array('nid'));
			$query11->condition('ns.uid', $curtuid);
			$query11->condition('ns.status', 1);
			$result11 = $query11->execute();
			$num_of_results = $result11->rowCount();
			$res = $num_of_results+1;
				$form["field_item"]['und'][0]['value']['#default_value'] = $res;
		
		
		
		
		$quer = db_select('node', 'ne');
		$quer->fields('ne', array('nid'));
		$quer->condition('ne.uid', $curtuid);
		$quer->condition('ne.status', 1);
		$quer_re = $quer->execute();
		foreach ($quer_re as $value_res) {

		$data2[] = $value_res->nid;
		}

        if(!empty($data2)) {
		$quer1 = db_select('field_data_field_room', 'nr');
		$quer1->fields('nr', array('field_room_value'));
		$quer1->condition('nr.entity_id', $data2, 'IN');
		$quer12 = $quer1->execute();
		foreach ($quer12 as $value_res1) {

		$data21[] = $value_res1->field_room_value;
		}
		
		
		$form['room_val_hid'] = array(
		'#type' => 'hidden',
		'#attributes' => array(
								'id' => 'roomhiddenval',
		),
		'#value' => $data21,
		 );
		}	
	  }	
	} 
	
 
}

function custom_code_date_popup_process_alter(&$element, &$form_state, &$context) {
 if (isset($element['#field']['field_name'])) {
    switch ($element['#field']['field_name']) {
      case 'field_effective_date': {
        $element['#datepicker_options'] = array(
          'maxDate' => 0,
        );
        $element['date'] = date_popup_process_date_part($element);
      }
      break;
    }
  }
}

function costom_code_inventory_reset($form, &$form_state) {
	
	$form_state['rebuild'] = FALSE;
	
}

function starting_drupal_dev_form_validate($form, &$form_state) {
	$valss = $form_state['input']['field_email_mem_info']['und'][0]['email'];
	$query11 = db_select('field_data_field_email_mem_info', 'emaild');
	$query11->fields('emaild', array('bundle'));
	$query11->condition('emaild.field_email_mem_info_email', $valss);
	$result11 = $query11->execute();
	$num_of_results = $result11->rowCount();
	if($num_of_results > 0) {
		form_set_error('Email', t('Email id already register'));
	}
	
	
}


?>